name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8 (syntax errors only)
      run: |
        # Only check for critical syntax errors, ignore F824 (nonlocal unused) 
        flake8 . --count --select=E9,F63,F7,F82 --ignore=F824 --show-source --statistics --exclude=.venv,__pycache__,backups
    
    - name: Check code formatting with black (informational)
      run: |
        black --check --diff . || echo "Code formatting issues found (not failing CI)"
      continue-on-error: true
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short
    
    - name: Test core module imports
      run: |
        python -c "from rosetta.calc import calculate_chart; print('✓ calc module imports')"
        python -c "from rosetta.patterns import detect_shapes; print('✓ patterns module imports')"
        python -c "from rosetta.drawing import draw_aspect_lines; print('✓ drawing module imports')"
        python -c "from rosetta.lookup import ASPECTS; print('✓ lookup module imports')"
        python -c "from rosetta.helpers import deg_to_rad; print('✓ helpers module imports')"
    
    - name: Test basic chart calculation
      run: |
        python -c "
        from rosetta.calc import calculate_chart
        
        # Test basic chart calculation doesn't crash
        try:
            chart = calculate_chart(1990, 7, 29, 1, 39, None, 38.0469166, -97.3447244, tz_name='America/Chicago')
            print(f'✓ Chart calculation successful: {len(chart)} objects calculated')
            assert len(chart) > 20, 'Chart should have at least 20 objects'
            print('✓ Chart validation passed')
        except Exception as e:
            print(f'✗ Chart calculation failed: {e}')
            exit(1)
        "
